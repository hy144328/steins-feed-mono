// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type OptionsLegacyParser, urlSearchParamsBodySerializer } from '@hey-api/client-fetch';
import type { LoginTokenPostData, LoginTokenPostError, LoginTokenPostResponse, TagsFeedsTagsGetError, TagsFeedsTagsGetResponse, LanguagesFeedsLanguagesGetError, LanguagesFeedsLanguagesGetResponse, FeedFeedsFeedFeedIdGetData, FeedFeedsFeedFeedIdGetError, FeedFeedsFeedFeedIdGetResponse, AttachTagFeedsFeedFeedIdAttachTagPutData, AttachTagFeedsFeedFeedIdAttachTagPutError, AttachTagFeedsFeedFeedIdAttachTagPutResponse, DetachTagFeedsFeedFeedIdDetachTagDeleteData, DetachTagFeedsFeedFeedIdDetachTagDeleteError, DetachTagFeedsFeedFeedIdDetachTagDeleteResponse, CreateAndAttachTagFeedsFeedFeedIdCreateAndAttachTagPutData, CreateAndAttachTagFeedsFeedFeedIdCreateAndAttachTagPutError, CreateAndAttachTagFeedsFeedFeedIdCreateAndAttachTagPutResponse, RootItemsGetData, RootItemsGetError, RootItemsGetResponse, LikeItemsLikePutData, LikeItemsLikePutError, LikeItemsLikePutResponse, RootGetError, RootGetResponse } from './types.gen';

export const client = createClient(createConfig());

/**
 * Login
 */
export const loginTokenPost = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<LoginTokenPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<LoginTokenPostResponse, LoginTokenPostError, ThrowOnError>({
        ...options,
        ...urlSearchParamsBodySerializer,
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            ...options?.headers
        },
        url: '/token'
    });
};

/**
 * Tags
 */
export const tagsFeedsTagsGet = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<TagsFeedsTagsGetResponse, TagsFeedsTagsGetError, ThrowOnError>({
        ...options,
        url: '/feeds/tags/'
    });
};

/**
 * Languages
 */
export const languagesFeedsLanguagesGet = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<LanguagesFeedsLanguagesGetResponse, LanguagesFeedsLanguagesGetError, ThrowOnError>({
        ...options,
        url: '/feeds/languages/'
    });
};

/**
 * Feed
 */
export const feedFeedsFeedFeedIdGet = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<FeedFeedsFeedFeedIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<FeedFeedsFeedFeedIdGetResponse, FeedFeedsFeedFeedIdGetError, ThrowOnError>({
        ...options,
        url: '/feeds/feed/{feed_id}'
    });
};

/**
 * Attach Tag
 */
export const attachTagFeedsFeedFeedIdAttachTagPut = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AttachTagFeedsFeedFeedIdAttachTagPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<AttachTagFeedsFeedFeedIdAttachTagPutResponse, AttachTagFeedsFeedFeedIdAttachTagPutError, ThrowOnError>({
        ...options,
        url: '/feeds/feed/{feed_id}/attach_tag'
    });
};

/**
 * Detach Tag
 */
export const detachTagFeedsFeedFeedIdDetachTagDelete = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DetachTagFeedsFeedFeedIdDetachTagDeleteData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DetachTagFeedsFeedFeedIdDetachTagDeleteResponse, DetachTagFeedsFeedFeedIdDetachTagDeleteError, ThrowOnError>({
        ...options,
        url: '/feeds/feed/{feed_id}/detach_tag'
    });
};

/**
 * Create And Attach Tag
 */
export const createAndAttachTagFeedsFeedFeedIdCreateAndAttachTagPut = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CreateAndAttachTagFeedsFeedFeedIdCreateAndAttachTagPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<CreateAndAttachTagFeedsFeedFeedIdCreateAndAttachTagPutResponse, CreateAndAttachTagFeedsFeedFeedIdCreateAndAttachTagPutError, ThrowOnError>({
        ...options,
        url: '/feeds/feed/{feed_id}/create_and_attach_tag'
    });
};

/**
 * Root
 */
export const rootItemsGet = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<RootItemsGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<RootItemsGetResponse, RootItemsGetError, ThrowOnError>({
        ...options,
        url: '/items/'
    });
};

/**
 * Like
 */
export const likeItemsLikePut = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<LikeItemsLikePutData, ThrowOnError>) => {
    return (options?.client ?? client).put<LikeItemsLikePutResponse, LikeItemsLikePutError, ThrowOnError>({
        ...options,
        url: '/items/like/'
    });
};

/**
 * Root
 */
export const rootGet = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<RootGetResponse, RootGetError, ThrowOnError>({
        ...options,
        url: '/'
    });
};